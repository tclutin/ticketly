services:
  postgres:
    image: postgres:17.5-alpine3.21
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ticketly
    volumes:
      - './docker/pg-data:/var/lib/postgresql/data'
    ports:
      - '5432:5432'
    networks:
      - backend

#  zitadel:
#    restart: 'always'
#    image: 'ghcr.io/zitadel/zitadel:latest'
#    command: 'start-from-init --masterkey "MasterkeyNeedsToHave32Characters" --tlsMode disabled'
#    environment:
#      ZITADEL_DATABASE_POSTGRES_HOST: postgres
#      ZITADEL_DATABASE_POSTGRES_PORT: 5432
#      ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
#      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: zitadel
#      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: zitadel
#      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: disable
#      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
#      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: postgres
#      ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
#      ZITADEL_EXTERNALSECURE: false
#    depends_on:
#      - postgres
#    ports:
#      - '8080:8080'
#    networks:
#      - 'backend'

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  centrifugo:
    image: centrifugo/centrifugo
    command: centrifugo -c /centrifugo/config.json
    ports:
      - "8000:8000"
    volumes:
      - ./docker/centrifugo:/centrifugo
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

networks:
  backend: